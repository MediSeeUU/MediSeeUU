Search.setIndex({"docnames": ["README", "file_parser", "file_parser.annex_10_parser", "file_parser.debugging_tools", "file_parser.pdf_parser", "file_parser.pdf_parser.parsers", "file_parser.xml_converter", "index", "modules"], "filenames": ["README.md", "file_parser.rst", "file_parser.annex_10_parser.rst", "file_parser.debugging_tools.rst", "file_parser.pdf_parser.rst", "file_parser.pdf_parser.parsers.rst", "file_parser.xml_converter.rst", "index.rst", "modules.rst"], "titles": ["General", "file_parser package", "file_parser.annex_10_parser package", "file_parser.debugging_tools package", "file_parser.pdf_parser package", "file_parser.pdf_parser.parsers package", "file_parser.xml_converter package", "PDF Scraper Documentation", "file_parser"], "terms": {"The": [0, 4, 5, 6], "main": [0, 1, 2, 4, 5, 6], "function": [0, 4, 5], "file": [0, 2, 4, 5, 6], "scraper": [0, 5], "i": [0, 2, 4, 5, 6], "pars": [0, 2, 4, 5, 6], "relev": [0, 5], "attribut": [0, 2, 4, 5, 6], "from": [0, 2, 4, 5, 6], "pdf": [0, 4, 5, 6], "excel": [0, 2], "obtain": [0, 6], "web": 0, "type": [0, 2, 4, 5, 6], "authoris": 0, "decis": [0, 1, 4, 5], "dec": 0, "summari": 0, "product": [0, 2], "characterist": 0, "annex": [0, 1, 2, 4, 5, 6], "european": 0, "public": 0, "assess": [0, 5], "report": 0, "epar": [0, 1, 2, 4, 5, 6], "orphan": [0, 5], "mainten": 0, "omar": [0, 1, 4, 5, 6], "To": 0, "streamlin": 0, "thi": [0, 4, 5, 6], "process": [0, 5], "ar": [0, 4, 5, 6], "first": [0, 5], "convert": [0, 4, 5, 6], "being": 0, "done": 0, "allow": 0, "fast": 0, "easi": 0, "wai": 0, "search": [0, 5, 6], "inform": [0, 4, 5], "compliment": 0, "xml_parsing_util": [0, 1, 7, 8], "which": [0, 4, 6], "provid": 0, "conveni": 0, "find": [0, 5], "particular": 0, "part": 0, "ec_pars": 0, "exclud": 0, "cannot": [0, 5], "easili": 0, "an": [0, 4, 5, 6], "filepath": [0, 5, 6], "need": [0, 5], "everi": [0, 4, 5], "contain": [0, 2, 4, 5, 6], "all": [0, 2, 4, 5, 6], "seper": 0, "header": [0, 4, 6], "section": [0, 4, 5, 6], "paragraph": [0, 5, 6], "A": [0, 5, 6], "json": [0, 2, 4, 6], "medicin": [0, 2, 4, 5, 6], "name": [0, 2, 4, 5, 6], "format": [0, 4, 5, 6], "eu_numb": [0, 1, 4], "_pdf_parser": 0, "multitud": 0, "faster": 0, "than": [0, 5], "directli": 0, "logic": 0, "take": [0, 6], "some": [0, 4, 5], "time": [0, 2], "creat": [0, 4, 5, 6], "thei": 0, "onli": [0, 5], "have": 0, "onc": 0, "save": 0, "long": 0, "run": [0, 5], "visualis": [0, 4], "scrape": [0, 2, 4, 5, 6], "visualisati": 0, "respons": 0, "": [0, 6], "right": [0, 4], "now": [0, 2], "call": [0, 4, 6], "extra": [0, 5], "modular": 0, "read": 0, "line": [0, 4, 6], "given": [0, 4, 5, 6], "bold": 0, "text": [0, 4, 5, 6], "unbold": 0, "until": 0, "next": 0, "found": [0, 2, 4, 5], "each": [0, 2, 4, 5, 6], "exactli": 0, "one": [0, 2, 5, 6], "element": [0, 5, 6], "between": 0, "0": [0, 6], "infinit": 0, "tag": [0, 6], "exampl": [0, 6], "addition": 0, "also": [0, 4], "includ": [0, 2, 4, 5], "metadata": [0, 6], "meta": [0, 6], "str": [0, 2, 3, 4, 5, 6], "initi": [0, 5, 6], "indicatior": 0, "bool": [0, 2, 3, 4, 5, 6], "creation": [0, 6], "date": [0, 2, 4, 5, 6], "datetim": [0, 4, 5, 6], "last": [0, 2], "modif": [0, 6], "head": [0, 5, 6], "whole": [0, 6], "can": [0, 4, 5, 6], "via": 0, "py": [0, 5, 6], "et": [0, 5, 6], "node": [0, 6], "simpl": 0, "high": 0, "level": 0, "abstract": 0, "programm": 0, "interfac": 0, "content": [0, 2, 5], "more": [0, 5], "intuit": 0, "manner": 0, "util": 0, "section_contains_header_substr": [0, 1, 6], "substr": [0, 6], "look": 0, "instead": 0, "section_get_paragraph_text": [0, 1, 6], "paragraph_index": 0, "findal": 0, "method": 0, "travers": 0, "within": [0, 6], "immedi": 0, "when": [0, 4, 5, 6], "rather": 0, "through": [0, 5], "raw": 0, "per": [0, 2, 4], "By": 0, "select": 0, "chanc": 0, "incorrect": 0, "reduc": 0, "anoth": 0, "major": 0, "advantag": 0, "becom": 0, "add": [0, 2, 4, 5], "new": [0, 4, 5], "specif": 0, "while": 0, "keep": 0, "code": 0, "clean": [0, 2, 5], "effici": 0, "copyright": 0, "utrecht": 0, "univers": 0, "depart": 0, "comput": 0, "scienc": 0, "annex_10_pars": [1, 7, 8], "submodul": [1, 7, 8], "__main__": [1, 5, 7, 8], "modul": [1, 7, 8], "annexes_already_pars": [1, 2], "clean_df": [1, 2], "get_active_clock_elaps": [1, 2], "get_al": [1, 2, 4, 5], "parse_fil": [1, 2, 4, 5], "product_name_in_epar": [1, 2], "debugging_tool": [1, 7, 8], "json_compil": [1, 7, 8], "compile_json_fil": [1, 3], "get_medicine_json": [1, 3], "pdf_parser": [1, 2, 7, 8], "parser": [1, 4, 6], "annex_pars": [1, 4], "dec_pars": [1, 4], "epar_pars": [1, 4], "omar_pars": [1, 4], "datetime_seri": [1, 4], "get_fil": [1, 4], "parse_fold": [1, 4, 6], "run_scrap": [1, 4], "helper": [1, 7, 8], "convert_articl": [1, 4], "convert_month": [1, 4], "convert_roman_numb": [1, 4], "get_dat": [1, 4, 5], "parsed_info_struct": [1, 5, 7, 8], "parsedinfostruct": [1, 4, 5], "parse_d": [1, 4], "pdf_helper": [1, 7, 8], "append_text": [1, 4], "combine_text": [1, 4], "create_outputfil": [1, 4], "create_outputfile_dec": [1, 4], "format_to_str": [1, 4], "get_text": [1, 4, 6], "get_text_format": [1, 4], "get_text_str": [1, 4], "header_split_check": [1, 4], "res_to_fil": [1, 4], "xml_convert": [1, 7, 8], "convert_fold": [1, 6], "convert_pdf_to_xml": [1, 6], "get_marked_paragraph": [1, 6], "print_xml": [1, 6], "print_xml_tag_clos": [1, 6], "print_xml_tag_open": [1, 6], "remove_illegal_charact": [1, 6], "split_paragraph": [1, 6], "file_get_creation_d": [1, 6], "file_get_modification_d": [1, 6], "file_get_name_pdf": [1, 6], "file_is_initi": [1, 6], "get_paragraphs_by_head": [1, 6], "paragraph_contains_substr": [1, 6], "section_append_paragraph": [1, 6], "section_contains_header_numb": [1, 6], "section_contains_header_substring_set": [1, 6], "section_contains_header_substring_set_al": [1, 6], "section_contains_paragraph_substr": [1, 6], "section_contains_paragraph_substring_set": [1, 6], "section_contains_substr": [1, 6], "section_contains_substring_set": [1, 6], "section_get_paragraph_indic": [1, 6], "section_is_table_of_cont": [1, 6], "xml_tag": [1, 7, 8], "annex_10_fold": 2, "return": [2, 4, 5, 6], "true": [2, 3, 4, 5], "alreadi": 2, "exist": [2, 4, 5, 6], "paramet": [2, 4, 5, 6], "folder": [2, 4, 6], "10": [2, 4], "fals": [2, 3, 4, 5], "otherwis": [2, 4, 5], "excel_data": 2, "datafram": 2, "pd": 2, "data_dir": 2, "list": [2, 3, 4, 5, 6], "dict": [2, 4, 5], "get": [2, 4, 5, 6], "three": 2, "row": 2, "activ": [2, 5], "elaps": 2, "clock": 2, "stop": 2, "item": 2, "final": [2, 4], "re": [2, 4, 5], "dictionari": [2, 4, 5], "directori": [2, 3, 4, 5, 6], "data": [2, 4, 6, 7], "filenam": [2, 4, 5, 6], "excel_fil": 2, "them": [2, 4, 5], "accord": [2, 5], "bibl": [2, 5], "data_folder_directori": 2, "annex_folder_nam": 2, "annex_10": 2, "annex10": 2, "after": [2, 4, 5, 6], "path": [2, 5], "current": [2, 4, 5], "updat": [2, 4, 5], "product_nam": 2, "all_data": 2, "opinion_d": 2, "tupl": [2, 4, 6], "check": [2, 4, 5], "similar": 2, "brand": [2, 5], "opinion": [2, 5], "chml_opinion_d": 2, "eu_num": 2, "add_webdata": 3, "add_pdfdata": 3, "medicine_path": 3, "json_list": 3, "dec_get_a": [4, 5], "dec_get_atmp": [4, 5], "dec_get_bn": [4, 5], "dec_get_d": [4, 5], "dec_get_decision_typ": [4, 5], "dec_get_mah": [4, 5], "dec_get_na": [4, 5], "dec_get_od": [4, 5], "dec_get_od_comp_d": [4, 5], "get_data": [4, 5], "get_default_dict": [4, 5], "get_name_sect": [4, 5], "agreed_after_accelerated_assess": [4, 5], "agreed_before_accelerated_assess": [4, 5], "check_date_befor": [4, 5], "clean_rapporteur": [4, 5], "find_rapp_between_rapp_and_corapp": [4, 5], "get_accelerated_assess": [4, 5], "get_corapp": [4, 5], "get_legal_basi": [4, 5], "get_opinion_d": [4, 5], "get_prim": [4, 5], "get_rapp": [4, 5], "get_rapp_aft": [4, 5], "get_reexamin": [4, 5], "get_alternative_treat": [4, 5], "get_insufficient_roi": [4, 5], "get_preval": [4, 5], "get_significant_benefit": [4, 5], "string": [4, 5, 6], "serial": 4, "dump": 4, "pi": [4, 5], "xml": [4, 5, 6, 7], "locat": [4, 6], "4": 4, "parallel": 4, "folder_nam": [4, 6], "walk": [4, 6], "doesn": [4, 6], "t": [4, 6], "write": [4, 6], "st": 4, "annex_fil": 4, "decision_fil": 4, "epar_fil": 4, "omar_fil": 4, "medicine_struct": [4, 5], "struct": [4, 5], "structur": [4, 5, 7], "articl": [4, 5], "written": [4, 6], "month": [4, 5], "januari": 4, "numer": 4, "valu": [4, 5, 6], "fulli": 4, "writen": 4, "replac": [4, 6], "roman": 4, "number": [4, 5, 6], "up": 4, "xii": 4, "normal": 4, "pattern": 4, "correct": 4, "txt": [4, 5], "extract": [4, 5], "iv": 4, "class": 4, "factori": 4, "2022": 4, "11": 4, "21": 4, "12": 4, "37": 4, "231706": 4, "base": [4, 5, 6], "object": 4, "continain": 4, "certain": [4, 5], "eu": 4, "size": 4, "int": [4, 5, 6], "font": [4, 6], "result": [4, 5], "lower": 4, "append": [4, 5, 6], "determin": 4, "whether": [4, 5, 6], "should": [4, 6], "lowercas": 4, "old_font": 4, "old_siz": 4, "old_text": 4, "actual": 4, "combin": 4, "same": [4, 6], "ad": [4, 5, 6], "outputnam": 4, "document": [4, 5, 6], "block": 4, "span": 4, "option": [4, 6], "fitz": 4, "plain": [4, 5], "remov": [4, 5, 6], "n": [4, 6], "present": 4, "arg": 4, "open": [4, 5, 6], "without": 4, "two": 4, "split": 4, "built": 4, "concaten": 4, "f": 4, "textiowrapp": 4, "io": 4, "load": 5, "loop": 5, "bodi": [5, 6], "substanc": 5, "out": 5, "default": [5, 6], "atmp": 5, "non": 5, "page": 5, "indic": [5, 6], "markethold": 5, "na": 5, "design": 5, "give": 5, "comp": 5, "fill": 5, "respect": 5, "input": [5, 6, 7], "variabl": 5, "text_el": 5, "word": 5, "agre": 5, "most": 5, "20": 5, "acceler": 5, "none": 5, "close": [5, 6], "maximum": 5, "consid": 5, "eu_accel_assess_g": 5, "ye": 5, "conclus": 5, "evid": 5, "wa": [5, 6], "befor": 5, "check_dai": 5, "check_month": 5, "check_year": 5, "ema_procedure_start_initi": 5, "earlier": 5, "dai": 5, "year": 5, "rapporteur": 5, "well": 5, "space": 5, "enter": 5, "other": [5, 6, 7], "tri": 5, "whitespac": 5, "trail": 5, "irrelev": 5, "unclean": 5, "support": 5, "case": 5, "ema_rapp": 5, "05": 5, "2004": 5, "xml_data": 5, "ema_corapp": 5, "co": 5, "usual": 5, "no_co": 5, "author": [5, 6], "ema": 5, "dd": 5, "mm": 5, "yyyi": 5, "eu_legal_basi": 5, "legal": [5, 6], "multipl": 5, "form": [5, 6], "x": [5, 6], "chmp_opinion_d": 5, "chmp": 5, "eu_prime_initi": 5, "prioriti": 5, "prime": 5, "01": 5, "03": 5, "2016": 5, "no_rapporteur": 5, "regex_str": 5, "from_char": 5, "us": 5, "regex": 5, "charact": [5, 6], "ema_reexamin": 5, "reexamin": 5, "examin": 5, "complet": 5, "bullet_point": 5, "bullet": 5, "point": [5, 7], "appropri": 5, "short": 5, "descript": 5, "about": 5, "These": 5, "depend": 5, "what": 5, "preval": 5, "alternative_treat": 5, "signific": 5, "benefit": 5, "influenc": 5, "previou": 5, "source_filepath": 6, "output_filepath": 6, "float": 6, "info": 6, "line_text": 6, "line_font_s": 6, "line_font_typ": 6, "bolded_text": 6, "unbolded_text": 6, "document_creation_d": 6, "document_modification_d": 6, "print": 6, "header_text": 6, "paragraph_text": 6, "where": 6, "wildcard": 6, "origin": 6, "pymupdf": 6, "textio": 6, "p": 6, "import": 6, "handl": 6, "access_typ": 6, "special": 6, "delimit": 6, "version": 6, "illeg": 6, "utf": 6, "8": 6, "meant": 6, "xml_head": 6, "etre": 6, "elementtre": 6, "repres": 6, "null": 6, "made": 6, "is_initi": 6, "flag": 6, "entir": 6, "singl": 6, "withing": 6, "header_numb": 6, "y": 6, "z": 6, "dot": 6, "end": 6, "substring_set": 6, "ani": 6, "its": 6, "index": 6, "occurr": 6, "order": 6, "start": 6, "like": 6, "integ": 6, "zero": 6, "access": [6, 7], "gener": 7, "output": 7, "interest": 7, "pdf_xml_convert": 7, "file_pars": 7, "packag": [7, 8], "subpackag": [7, 8]}, "objects": {"": [[1, 0, 0, "-", "file_parser"]], "file_parser": [[2, 0, 0, "-", "annex_10_parser"], [3, 0, 0, "-", "debugging_tools"], [4, 0, 0, "-", "pdf_parser"], [6, 0, 0, "-", "xml_converter"]], "file_parser.annex_10_parser": [[2, 0, 0, "-", "__main__"]], "file_parser.annex_10_parser.__main__": [[2, 1, 1, "", "annexes_already_parsed"], [2, 1, 1, "", "clean_df"], [2, 1, 1, "", "get_active_clock_elapsed"], [2, 1, 1, "", "get_all"], [2, 1, 1, "", "main"], [2, 1, 1, "", "parse_file"], [2, 1, 1, "", "product_name_in_epars"]], "file_parser.debugging_tools": [[3, 0, 0, "-", "json_compiler"]], "file_parser.debugging_tools.json_compiler": [[3, 1, 1, "", "compile_json_files"], [3, 1, 1, "", "get_medicine_json"]], "file_parser.pdf_parser": [[4, 0, 0, "-", "__main__"], [4, 0, 0, "-", "helper"], [4, 0, 0, "-", "parsed_info_struct"], [5, 0, 0, "-", "parsers"], [4, 0, 0, "-", "pdf_helper"]], "file_parser.pdf_parser.__main__": [[4, 1, 1, "", "datetime_serializer"], [4, 1, 1, "", "get_files"], [4, 1, 1, "", "main"], [4, 1, 1, "", "parse_folder"], [4, 1, 1, "", "run_scrapers"]], "file_parser.pdf_parser.helper": [[4, 1, 1, "", "convert_articles"], [4, 1, 1, "", "convert_months"], [4, 1, 1, "", "convert_roman_numbers"], [4, 1, 1, "", "get_date"]], "file_parser.pdf_parser.parsed_info_struct": [[4, 2, 1, "", "ParsedInfoStruct"]], "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct": [[4, 3, 1, "", "annexes"], [4, 3, 1, "", "decisions"], [4, 3, 1, "", "epars"], [4, 3, 1, "", "eu_number"], [4, 3, 1, "", "omars"], [4, 3, 1, "", "parse_date"]], "file_parser.pdf_parser.parsers": [[5, 0, 0, "-", "annex_parser"], [5, 0, 0, "-", "dec_parser"], [5, 0, 0, "-", "epar_parser"], [5, 0, 0, "-", "omar_parser"]], "file_parser.pdf_parser.parsers.annex_parser": [[5, 1, 1, "", "parse_file"]], "file_parser.pdf_parser.parsers.dec_parser": [[5, 1, 1, "", "dec_get_as"], [5, 1, 1, "", "dec_get_atmp"], [5, 1, 1, "", "dec_get_bn"], [5, 1, 1, "", "dec_get_date"], [5, 1, 1, "", "dec_get_decision_type"], [5, 1, 1, "", "dec_get_mah"], [5, 1, 1, "", "dec_get_nas"], [5, 1, 1, "", "dec_get_od"], [5, 1, 1, "", "dec_get_od_comp_date"], [5, 1, 1, "", "get_data"], [5, 1, 1, "", "get_default_dict"], [5, 1, 1, "", "get_name_section"], [5, 1, 1, "", "parse_file"]], "file_parser.pdf_parser.parsers.epar_parser": [[5, 1, 1, "", "agreed_after_accelerated_assessment"], [5, 1, 1, "", "agreed_before_accelerated_assessment"], [5, 1, 1, "", "check_date_before"], [5, 1, 1, "", "clean_rapporteur"], [5, 1, 1, "", "find_rapp_between_rapp_and_corapp"], [5, 1, 1, "", "get_accelerated_assessment"], [5, 1, 1, "", "get_all"], [5, 1, 1, "", "get_corapp"], [5, 1, 1, "", "get_date"], [5, 1, 1, "", "get_legal_basis"], [5, 1, 1, "", "get_opinion_date"], [5, 1, 1, "", "get_prime"], [5, 1, 1, "", "get_rapp"], [5, 1, 1, "", "get_rapp_after"], [5, 1, 1, "", "get_reexamination"], [5, 1, 1, "", "parse_file"]], "file_parser.pdf_parser.parsers.omar_parser": [[5, 1, 1, "", "get_alternative_treatments"], [5, 1, 1, "", "get_insufficient_roi"], [5, 1, 1, "", "get_prevalence"], [5, 1, 1, "", "get_significant_benefit"], [5, 1, 1, "", "parse_file"]], "file_parser.pdf_parser.pdf_helper": [[4, 1, 1, "", "append_text"], [4, 1, 1, "", "combine_text"], [4, 1, 1, "", "create_outputfile"], [4, 1, 1, "", "create_outputfile_dec"], [4, 1, 1, "", "format_to_string"], [4, 1, 1, "", "get_text"], [4, 1, 1, "", "get_text_format"], [4, 1, 1, "", "get_text_str"], [4, 1, 1, "", "header_split_check"], [4, 1, 1, "", "res_to_file"]], "file_parser.xml_converter": [[6, 0, 0, "-", "__main__"], [6, 0, 0, "-", "xml_parsing_utils"], [6, 0, 0, "-", "xml_tags"]], "file_parser.xml_converter.__main__": [[6, 1, 1, "", "convert_folder"], [6, 1, 1, "", "convert_pdf_to_xml"], [6, 1, 1, "", "get_marked_paragraphs"], [6, 1, 1, "", "main"], [6, 1, 1, "", "print_xml"], [6, 1, 1, "", "print_xml_tag_close"], [6, 1, 1, "", "print_xml_tag_open"], [6, 1, 1, "", "remove_illegal_characters"], [6, 1, 1, "", "split_paragraphs"]], "file_parser.xml_converter.xml_parsing_utils": [[6, 1, 1, "", "file_get_creation_date"], [6, 1, 1, "", "file_get_modification_date"], [6, 1, 1, "", "file_get_name_pdf"], [6, 1, 1, "", "file_is_initial"], [6, 1, 1, "", "get_paragraphs_by_header"], [6, 1, 1, "", "paragraph_contains_substring"], [6, 1, 1, "", "section_append_paragraphs"], [6, 1, 1, "", "section_contains_header_number"], [6, 1, 1, "", "section_contains_header_substring"], [6, 1, 1, "", "section_contains_header_substring_set"], [6, 1, 1, "", "section_contains_header_substring_set_all"], [6, 1, 1, "", "section_contains_paragraph_substring"], [6, 1, 1, "", "section_contains_paragraph_substring_set"], [6, 1, 1, "", "section_contains_substring"], [6, 1, 1, "", "section_contains_substring_set"], [6, 1, 1, "", "section_get_paragraph_indices"], [6, 1, 1, "", "section_get_paragraph_text"], [6, 1, 1, "", "section_is_table_of_contents"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"gener": 0, "input": 0, "output": 0, "other": 0, "point": 0, "interest": 0, "pdf_xml_convert": 0, "xml": 0, "structur": 0, "access": 0, "data": 0, "file_pars": [1, 2, 3, 4, 5, 6, 8], "packag": [1, 2, 3, 4, 5, 6], "subpackag": [1, 4], "annex_10_pars": 2, "submodul": [2, 3, 4, 5, 6], "__main__": [2, 4, 6], "modul": [2, 3, 4, 5, 6], "debugging_tool": 3, "json_compil": 3, "pdf_parser": [4, 5], "helper": 4, "parsed_info_struct": 4, "pdf_helper": 4, "parser": 5, "annex_pars": 5, "dec_pars": 5, "epar_pars": 5, "omar_pars": 5, "xml_convert": 6, "xml_parsing_util": 6, "xml_tag": 6, "pdf": 7, "scraper": 7, "document": 7, "readm": 7, "sourc": 7, "code": 7}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"General": [[0, "general"]], "Input & Output": [[0, "input-output"]], "Input": [[0, "input"]], "Output": [[0, "output"]], "Other points of interest": [[0, "other-points-of-interest"]], "pdf_xml_converter": [[0, "pdf-xml-converter"]], "XML Structure": [[0, "xml-structure"]], "Accessing XML data": [[0, "accessing-xml-data"]], "file_parser package": [[1, "module-file_parser"]], "Subpackages": [[1, "subpackages"], [4, "subpackages"]], "file_parser.annex_10_parser package": [[2, "module-file_parser.annex_10_parser"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "file_parser.annex_10_parser.__main__ module": [[2, "module-file_parser.annex_10_parser.__main__"]], "file_parser.debugging_tools package": [[3, "module-file_parser.debugging_tools"]], "file_parser.debugging_tools.json_compiler module": [[3, "module-file_parser.debugging_tools.json_compiler"]], "file_parser.pdf_parser package": [[4, "module-file_parser.pdf_parser"]], "file_parser.pdf_parser.__main__ module": [[4, "module-file_parser.pdf_parser.__main__"]], "file_parser.pdf_parser.helper module": [[4, "module-file_parser.pdf_parser.helper"]], "file_parser.pdf_parser.parsed_info_struct module": [[4, "module-file_parser.pdf_parser.parsed_info_struct"]], "file_parser.pdf_parser.pdf_helper module": [[4, "module-file_parser.pdf_parser.pdf_helper"]], "file_parser.pdf_parser.parsers package": [[5, "module-file_parser.pdf_parser.parsers"]], "file_parser.pdf_parser.parsers.annex_parser module": [[5, "module-file_parser.pdf_parser.parsers.annex_parser"]], "file_parser.pdf_parser.parsers.dec_parser module": [[5, "module-file_parser.pdf_parser.parsers.dec_parser"]], "file_parser.pdf_parser.parsers.epar_parser module": [[5, "module-file_parser.pdf_parser.parsers.epar_parser"]], "file_parser.pdf_parser.parsers.omar_parser module": [[5, "module-file_parser.pdf_parser.parsers.omar_parser"]], "file_parser.xml_converter package": [[6, "module-file_parser.xml_converter"]], "file_parser.xml_converter.__main__ module": [[6, "module-file_parser.xml_converter.__main__"]], "file_parser.xml_converter.xml_parsing_utils module": [[6, "module-file_parser.xml_converter.xml_parsing_utils"]], "file_parser.xml_converter.xml_tags module": [[6, "module-file_parser.xml_converter.xml_tags"]], "PDF Scraper Documentation": [[7, "pdf-scraper-documentation"]], "Readme": [[7, null]], "Source Code Documentation": [[7, null]], "file_parser": [[8, "file-parser"]]}, "indexentries": {"file_parser": [[1, "module-file_parser"]], "module": [[1, "module-file_parser"], [2, "module-file_parser.annex_10_parser"], [2, "module-file_parser.annex_10_parser.__main__"], [3, "module-file_parser.debugging_tools"], [3, "module-file_parser.debugging_tools.json_compiler"], [4, "module-file_parser.pdf_parser"], [4, "module-file_parser.pdf_parser.__main__"], [4, "module-file_parser.pdf_parser.helper"], [4, "module-file_parser.pdf_parser.parsed_info_struct"], [4, "module-file_parser.pdf_parser.pdf_helper"], [5, "module-file_parser.pdf_parser.parsers"], [5, "module-file_parser.pdf_parser.parsers.annex_parser"], [5, "module-file_parser.pdf_parser.parsers.dec_parser"], [5, "module-file_parser.pdf_parser.parsers.epar_parser"], [5, "module-file_parser.pdf_parser.parsers.omar_parser"], [6, "module-file_parser.xml_converter"], [6, "module-file_parser.xml_converter.__main__"], [6, "module-file_parser.xml_converter.xml_parsing_utils"], [6, "module-file_parser.xml_converter.xml_tags"]], "annexes_already_parsed() (in module file_parser.annex_10_parser.__main__)": [[2, "file_parser.annex_10_parser.__main__.annexes_already_parsed"]], "clean_df() (in module file_parser.annex_10_parser.__main__)": [[2, "file_parser.annex_10_parser.__main__.clean_df"]], "file_parser.annex_10_parser": [[2, "module-file_parser.annex_10_parser"]], "file_parser.annex_10_parser.__main__": [[2, "module-file_parser.annex_10_parser.__main__"]], "get_active_clock_elapsed() (in module file_parser.annex_10_parser.__main__)": [[2, "file_parser.annex_10_parser.__main__.get_active_clock_elapsed"]], "get_all() (in module file_parser.annex_10_parser.__main__)": [[2, "file_parser.annex_10_parser.__main__.get_all"]], "main() (in module file_parser.annex_10_parser.__main__)": [[2, "file_parser.annex_10_parser.__main__.main"]], "parse_file() (in module file_parser.annex_10_parser.__main__)": [[2, "file_parser.annex_10_parser.__main__.parse_file"]], "product_name_in_epars() (in module file_parser.annex_10_parser.__main__)": [[2, "file_parser.annex_10_parser.__main__.product_name_in_epars"]], "compile_json_files() (in module file_parser.debugging_tools.json_compiler)": [[3, "file_parser.debugging_tools.json_compiler.compile_json_files"]], "file_parser.debugging_tools": [[3, "module-file_parser.debugging_tools"]], "file_parser.debugging_tools.json_compiler": [[3, "module-file_parser.debugging_tools.json_compiler"]], "get_medicine_json() (in module file_parser.debugging_tools.json_compiler)": [[3, "file_parser.debugging_tools.json_compiler.get_medicine_json"]], "parsedinfostruct (class in file_parser.pdf_parser.parsed_info_struct)": [[4, "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct"]], "annexes (file_parser.pdf_parser.parsed_info_struct.parsedinfostruct attribute)": [[4, "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct.annexes"]], "append_text() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.append_text"]], "combine_text() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.combine_text"]], "convert_articles() (in module file_parser.pdf_parser.helper)": [[4, "file_parser.pdf_parser.helper.convert_articles"]], "convert_months() (in module file_parser.pdf_parser.helper)": [[4, "file_parser.pdf_parser.helper.convert_months"]], "convert_roman_numbers() (in module file_parser.pdf_parser.helper)": [[4, "file_parser.pdf_parser.helper.convert_roman_numbers"]], "create_outputfile() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.create_outputfile"]], "create_outputfile_dec() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.create_outputfile_dec"]], "datetime_serializer() (in module file_parser.pdf_parser.__main__)": [[4, "file_parser.pdf_parser.__main__.datetime_serializer"]], "decisions (file_parser.pdf_parser.parsed_info_struct.parsedinfostruct attribute)": [[4, "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct.decisions"]], "epars (file_parser.pdf_parser.parsed_info_struct.parsedinfostruct attribute)": [[4, "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct.epars"]], "eu_number (file_parser.pdf_parser.parsed_info_struct.parsedinfostruct attribute)": [[4, "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct.eu_number"]], "file_parser.pdf_parser": [[4, "module-file_parser.pdf_parser"]], "file_parser.pdf_parser.__main__": [[4, "module-file_parser.pdf_parser.__main__"]], "file_parser.pdf_parser.helper": [[4, "module-file_parser.pdf_parser.helper"]], "file_parser.pdf_parser.parsed_info_struct": [[4, "module-file_parser.pdf_parser.parsed_info_struct"]], "file_parser.pdf_parser.pdf_helper": [[4, "module-file_parser.pdf_parser.pdf_helper"]], "format_to_string() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.format_to_string"]], "get_date() (in module file_parser.pdf_parser.helper)": [[4, "file_parser.pdf_parser.helper.get_date"]], "get_files() (in module file_parser.pdf_parser.__main__)": [[4, "file_parser.pdf_parser.__main__.get_files"]], "get_text() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.get_text"]], "get_text_format() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.get_text_format"]], "get_text_str() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.get_text_str"]], "header_split_check() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.header_split_check"]], "main() (in module file_parser.pdf_parser.__main__)": [[4, "file_parser.pdf_parser.__main__.main"]], "omars (file_parser.pdf_parser.parsed_info_struct.parsedinfostruct attribute)": [[4, "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct.omars"]], "parse_date (file_parser.pdf_parser.parsed_info_struct.parsedinfostruct attribute)": [[4, "file_parser.pdf_parser.parsed_info_struct.ParsedInfoStruct.parse_date"]], "parse_folder() (in module file_parser.pdf_parser.__main__)": [[4, "file_parser.pdf_parser.__main__.parse_folder"]], "res_to_file() (in module file_parser.pdf_parser.pdf_helper)": [[4, "file_parser.pdf_parser.pdf_helper.res_to_file"]], "run_scrapers() (in module file_parser.pdf_parser.__main__)": [[4, "file_parser.pdf_parser.__main__.run_scrapers"]], "agreed_after_accelerated_assessment() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.agreed_after_accelerated_assessment"]], "agreed_before_accelerated_assessment() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.agreed_before_accelerated_assessment"]], "check_date_before() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.check_date_before"]], "clean_rapporteur() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.clean_rapporteur"]], "dec_get_as() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_as"]], "dec_get_atmp() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_atmp"]], "dec_get_bn() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_bn"]], "dec_get_date() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_date"]], "dec_get_decision_type() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_decision_type"]], "dec_get_mah() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_mah"]], "dec_get_nas() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_nas"]], "dec_get_od() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_od"]], "dec_get_od_comp_date() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.dec_get_od_comp_date"]], "file_parser.pdf_parser.parsers": [[5, "module-file_parser.pdf_parser.parsers"]], "file_parser.pdf_parser.parsers.annex_parser": [[5, "module-file_parser.pdf_parser.parsers.annex_parser"]], "file_parser.pdf_parser.parsers.dec_parser": [[5, "module-file_parser.pdf_parser.parsers.dec_parser"]], "file_parser.pdf_parser.parsers.epar_parser": [[5, "module-file_parser.pdf_parser.parsers.epar_parser"]], "file_parser.pdf_parser.parsers.omar_parser": [[5, "module-file_parser.pdf_parser.parsers.omar_parser"]], "find_rapp_between_rapp_and_corapp() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.find_rapp_between_rapp_and_corapp"]], "get_accelerated_assessment() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_accelerated_assessment"]], "get_all() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_all"]], "get_alternative_treatments() (in module file_parser.pdf_parser.parsers.omar_parser)": [[5, "file_parser.pdf_parser.parsers.omar_parser.get_alternative_treatments"]], "get_corapp() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_corapp"]], "get_data() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.get_data"]], "get_date() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_date"]], "get_default_dict() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.get_default_dict"]], "get_insufficient_roi() (in module file_parser.pdf_parser.parsers.omar_parser)": [[5, "file_parser.pdf_parser.parsers.omar_parser.get_insufficient_roi"]], "get_legal_basis() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_legal_basis"]], "get_name_section() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.get_name_section"]], "get_opinion_date() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_opinion_date"]], "get_prevalence() (in module file_parser.pdf_parser.parsers.omar_parser)": [[5, "file_parser.pdf_parser.parsers.omar_parser.get_prevalence"]], "get_prime() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_prime"]], "get_rapp() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_rapp"]], "get_rapp_after() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_rapp_after"]], "get_reexamination() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.get_reexamination"]], "get_significant_benefit() (in module file_parser.pdf_parser.parsers.omar_parser)": [[5, "file_parser.pdf_parser.parsers.omar_parser.get_significant_benefit"]], "parse_file() (in module file_parser.pdf_parser.parsers.annex_parser)": [[5, "file_parser.pdf_parser.parsers.annex_parser.parse_file"]], "parse_file() (in module file_parser.pdf_parser.parsers.dec_parser)": [[5, "file_parser.pdf_parser.parsers.dec_parser.parse_file"]], "parse_file() (in module file_parser.pdf_parser.parsers.epar_parser)": [[5, "file_parser.pdf_parser.parsers.epar_parser.parse_file"]], "parse_file() (in module file_parser.pdf_parser.parsers.omar_parser)": [[5, "file_parser.pdf_parser.parsers.omar_parser.parse_file"]], "convert_folder() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.convert_folder"]], "convert_pdf_to_xml() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.convert_pdf_to_xml"]], "file_get_creation_date() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.file_get_creation_date"]], "file_get_modification_date() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.file_get_modification_date"]], "file_get_name_pdf() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.file_get_name_pdf"]], "file_is_initial() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.file_is_initial"]], "file_parser.xml_converter": [[6, "module-file_parser.xml_converter"]], "file_parser.xml_converter.__main__": [[6, "module-file_parser.xml_converter.__main__"]], "file_parser.xml_converter.xml_parsing_utils": [[6, "module-file_parser.xml_converter.xml_parsing_utils"]], "file_parser.xml_converter.xml_tags": [[6, "module-file_parser.xml_converter.xml_tags"]], "get_marked_paragraphs() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.get_marked_paragraphs"]], "get_paragraphs_by_header() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.get_paragraphs_by_header"]], "main() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.main"]], "paragraph_contains_substring() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.paragraph_contains_substring"]], "print_xml() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.print_xml"]], "print_xml_tag_close() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.print_xml_tag_close"]], "print_xml_tag_open() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.print_xml_tag_open"]], "remove_illegal_characters() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.remove_illegal_characters"]], "section_append_paragraphs() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_append_paragraphs"]], "section_contains_header_number() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_header_number"]], "section_contains_header_substring() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_header_substring"]], "section_contains_header_substring_set() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_header_substring_set"]], "section_contains_header_substring_set_all() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_header_substring_set_all"]], "section_contains_paragraph_substring() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_paragraph_substring"]], "section_contains_paragraph_substring_set() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_paragraph_substring_set"]], "section_contains_substring() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_substring"]], "section_contains_substring_set() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_contains_substring_set"]], "section_get_paragraph_indices() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_get_paragraph_indices"]], "section_get_paragraph_text() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_get_paragraph_text"]], "section_is_table_of_contents() (in module file_parser.xml_converter.xml_parsing_utils)": [[6, "file_parser.xml_converter.xml_parsing_utils.section_is_table_of_contents"]], "split_paragraphs() (in module file_parser.xml_converter.__main__)": [[6, "file_parser.xml_converter.__main__.split_paragraphs"]]}})