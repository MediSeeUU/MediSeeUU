on:
  push:
    branches:
      - 'development'
  workflow_dispatch:
  
name: Generate Sphinx Docs

env:
  SECRET_KEY: notsecret
  DB_USERNAME: root
  DB_PASSWORD: 1234
  DB_HOST: 127.0.0.1
  DB_DATABASE: mydatabase

jobs:
  build:
    runs-on: ubuntu-22.04
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
        ports: ['3306:3306']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
        cache: 'pip'

    - name: Install Docs Dependencies
      working-directory: docs
      run: pip install -r requirements.txt
      
    - name: Generate Sphinx Docs for Home
      working-directory: docs
      run: |
        make clean
        make html
        
    - name: Install Scraper Dependencies
      working-directory: scraping
      run: pip install -r requirements.txt
    
    - name: Generate Sphinx Docs for Combiner
      working-directory: scraping/combiner
      run: |
        make clean -C docs
        make html -C docs
    
    - name: Generate Sphinx Docs for DB Uploader
      working-directory: scraping/db_uploader
      run: |
        make clean -C docs
        make html -C docs
    
    - name: Generate Sphinx Docs for Filter
      working-directory: scraping/filter
      run: |
        make clean -C docs
        make html -C docs
    
    - name: Generate Sphinx Docs for PDF Module
      working-directory: scraping/pdf_module
      run: |
        make clean -C docs
        make html -C docs
    
    - name: Generate Sphinx Docs for Web Scraper
      working-directory: scraping/web_scraper
      run: |
        make clean -C docs
        make html -C docs
    
    - name: Install Tests Dependencies
      working-directory: tests
      run: |
        pip install -r requirements.txt
    
    - name: Generate Sphinx Docs for Tests
      working-directory: tests
      run: |
        make clean -C docs
        make html -C docs
    
    - name: Install Backend Dependencies
      working-directory: medctrl-backend/API
      run: |
        pip install -r ../requirements.txt
    
    - name: Set up Backend
      working-directory: medctrl-backend/API
      run: |
        python manage.py makemigrations api
        python manage.py migrate
      env: 
        DB_PORT: ${{ job.services.mysql.ports['3306'] }}
    
    - name: Generate Sphinx Docs for Backend
      working-directory: medctrl-backend/API
      run: |
        make clean -C docs
        make html -C docs
      env: 
        DB_PORT: ${{ job.services.mysql.ports['3306'] }}
    
    - name: Commit Docs
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add -A
        if ! git diff-index --quiet HEAD; then
          git commit -m "Generated Sphinx Docs"
          git push
        fi
        
